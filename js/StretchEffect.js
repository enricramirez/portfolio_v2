class StretchEffect extends EffectShell{constructor(e=document.body,t=null,i={}){super(e,t),this.container&&this.itemsWrapper&&(i.strength=i.strength||.25,this.options=i,this.init())}init(){this.position=new THREE.Vector3(0,0,0),this.scale=new THREE.Vector3(1,1,1),this.geometry=new THREE.PlaneBufferGeometry(1,1,32,32),this.uniforms={uTexture:{value:null},uOffset:{value:new THREE.Vector2(0,0)},uAlpha:{value:0}},this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"\n        uniform vec2 uOffset;\n\n        varying vec2 vUv;\n\n        vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {\n          float M_PI = 3.1415926535897932384626433832795;\n          position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n          position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n          return position;\n        }\n\n        void main() {\n          vUv =  uv + (uOffset * 2.);\n          vec3 newPosition = position;\n          newPosition = deformationCurve(position,uv,uOffset);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n        }\n      ",fragmentShader:"\n        uniform sampler2D uTexture;\n        uniform float uAlpha;\n\n        varying vec2 vUv;\n\n        vec2 scaleUV(vec2 uv,float scale) {\n          float center = 0.5;\n          return ((uv - center) * scale) + center;\n        }\n\n        void main() {\n          vec3 color = texture2D(uTexture,scaleUV(vUv,0.8)).rgb;\n          gl_FragColor = vec4(color,uAlpha);\n        }\n      ",transparent:!0}),this.plane=new THREE.Mesh(this.geometry,this.material),this.scene.add(this.plane)}onMouseEnter(){this.currentItem&&this.isMouseOver||(this.isMouseOver=!0,TweenLite.to(this.uniforms.uAlpha,.5,{value:1,ease:Power4.easeOut}))}onMouseLeave(e){TweenLite.to(this.uniforms.uAlpha,.5,{value:0,ease:Power4.easeOut})}onMouseMove(e){let t=this.mouse.x.map(-1,1,-this.viewSize.width/2,this.viewSize.width/2),i=this.mouse.y.map(-1,1,-this.viewSize.height/2,this.viewSize.height/2);this.position=new THREE.Vector3(t,i,0),TweenLite.to(this.plane.position,1,{x:t,y:i,ease:Power4.easeOut,onUpdate:this.onPositionUpdate.bind(this)})}onPositionUpdate(){let e=this.plane.position.clone().sub(this.position).multiplyScalar(-this.options.strength);this.uniforms.uOffset.value=e}onMouseOver(e,t){this.isLoaded&&(this.onMouseEnter(),this.currentItem&&this.currentItem.index===e||this.onTargetChange(e))}onTargetChange(e){if(this.currentItem=this.items[e],!this.currentItem.texture)return;let t=this.currentItem.img.naturalWidth/this.currentItem.img.naturalHeight;this.scale=new THREE.Vector3(t*0.24,0.24,0.24),this.uniforms.uTexture.value=this.currentItem.texture,this.plane.scale.copy(this.scale)}}